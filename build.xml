<project name="json-doclet" default="javadoc-example">
    <property name="build.dir" location="build" />
    <property name="build.antlr.dir" location="${build.dir}/antlr" />
    <property name="build.prod.dir" location="${build.dir}/prod" />
    <property name="build.test.dir" location="${build.dir}/test" />
    <property name="build.example.dir" location="${build.dir}/example" />
    <property name="src.dir" location="src" />
    <property name="lib.dir" location="lib" />
    <property name="doc.dir" location="docs" />
    <property name="test.dir" location="tests" />
    <property name="example.dir" location="example" />
    <property name="doc.example.dir" location="docs-example" />


    <path id="project.classpath">
        <pathelement location="${build.prod.dir}" />
        <pathelement location="${build.test.dir}" />
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>


    <target name="clean">
        <delete dir="${build.dir}" />
        <delete dir="${doc.example.dir}" />
    </target>

    <target name="prepare">
        <tstamp/>
        <mkdir dir="${build.dir}" />
        <mkdir dir="${build.antlr.dir}" />
        <mkdir dir="${build.prod.dir}" />
        <mkdir dir="${build.test.dir}" />
        <mkdir dir="${build.example.dir}" />
        <mkdir dir="${doc.example.dir}" />
    </target>

    <target name="lr">
        <antlr:ant-antlr3 xmlns:antlr="antlib:org/apache/tools/ant/antlr"
            target="src/Java.g"
            outputdirectory="${build.antlr.dir}">
            <classpath refid="project.classpath"/>
        </antlr:ant-antlr3>
    </target>

    <target name="compile-lr" depends="lr">
        <javac srcdir="${build.antlr.dir}" destdir="${build.prod.dir}">
            <classpath refid="project.classpath" />
        </javac>
    </target>

    <target name="compile">
        <javac srcdir="${src.dir}" destdir="${build.prod.dir}">
            <classpath refid="project.classpath" />
        </javac>
    </target>

    <target name="compile-tests" depends="jar">
        <javac srcdir="${test.dir}" destdir="${build.test.dir}">
            <compilerarg value="-Xlint" />
            <classpath refid="project.classpath" />
        </javac>
    </target>

    <target name="compile-example">
        <javac srcdir="${example.dir}" destdir="${build.example.dir}">
            <compilerarg value="-Xlint" />
            <classpath refid="project.classpath" />
        </javac>
    </target>

    <target name="jar" depends="clean, prepare, compile-lr, compile">
        <property name="version.num" value="0.11"/>
        <jar basedir="${build.prod.dir}" destfile="${build.dir}/json-doclet-${version.num}.jar" />
    </target>

    <target name="javadoc">
        <javadoc sourcepath="${src.dir}" destdir="${doc.dir}">
            <classpath refid="project.classpath" />
        </javadoc>
    </target>

    <target name="javadoc-example-traditional" depends="compile">
        <javadoc
            sourcefiles="example/helloworld.java"
            destdir="javadocs-hello"
            />
    </target>

    <target name="javadoc-example" depends="compile">
        <javadoc
            sourcefiles="example/helloworld.java"
            doclet="it.dexy.jsondoclet.Doclet"
            docletpathref="project.classpath"
            destdir="example"
            />
    </target>

    <target name="test" depends="compile-tests">
        <junit haltonfailure="true">
            <classpath refid="project.classpath" />
            <formatter type="brief" usefile="false" />
            <batchtest>
                <fileset dir="${build.test.dir}"
                    includes="**/*Test.class" />
            </batchtest>
            <sysproperty key="doc.dir" value="${doc.dir}" />
            <sysproperty key="index.dir" value="${index.dir}" />
        </junit>
    </target>

</project>

